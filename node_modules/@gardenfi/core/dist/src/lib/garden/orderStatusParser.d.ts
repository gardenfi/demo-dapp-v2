import { MatchedOrder, Swap } from '@gardenfi/orderbook';
import { OrderActions } from './garden.types';
import { OrderStatus, SwapStatus } from '../status';

/**
 * Parse the order status based on the current block number and checks if its expired or initiated or redeemed or refunded
 * @param order Order object
 * @param sourceChainCurrentBlockNumber source chain current block number
 * @param destChainCurrentBlockNumber destination chain current block number
 * @note send the current block number of the L1 chain even if the order is on L2 chain.
 * @returns {OrderStatus} The status of the order
 */
export declare const ParseOrderStatus: (order: MatchedOrder, sourceChainCurrentBlockNumber: number, destChainCurrentBlockNumber: number) => OrderStatus;
/**
 * Parse the swap status based on the current block number and checks if its expired or initiated or redeemed or refunded
 * @param swap The swap object
 * @param currentBlockNumber
 */
export declare const ParseSwapStatus: (swap: Swap, currentBlockNumber: number) => SwapStatus;
/**
 * Parse the action to be performed on the.
 * @param order Order object
 * @param sourceChainCurrentBlockNumber source chain current block number
 * @param destChainCurrentBlockNumber destination chain current block number
 * @note send the current block number of the L1 chain even if the order is on L2 chain.
 * @returns {OrderActions} The action to be performed on the order
 */
export declare const parseAction: (order: MatchedOrder, sourceChainCurrentBlockNumber: number, destChainCurrentBlockNumber: number) => OrderActions;
/**
 * Parse the action to be performed on the order based on the order status.
 * @param status Order status
 * @returns {OrderActions} The action to be performed on the order
 */
export declare const parseActionFromStatus: (status: OrderStatus) => OrderActions;
export declare const isExpired: (unixTime: number, tillHours?: number) => boolean;
export declare const filterDeadlineExpiredOrders: (orders: MatchedOrder[]) => MatchedOrder[];
