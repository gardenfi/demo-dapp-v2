import { IEVMWallet, IHTLCWallet } from '@catalogfi/wallets';
import { EVMSwapConfig } from './evmHTLC.types';
import { Address } from 'viem';

export declare class EVMHTLC implements IHTLCWallet {
    private swap;
    private readonly wallet;
    /**
     * @constructor
     * @param {EVMSwapConfig} swap - Atomic swap config, chain must be provided
     * @param {IEVMWallet} wallet
     */
    constructor(swap: EVMSwapConfig, wallet: IEVMWallet);
    getHTLCContract(): Promise<{
        read: {
            eip712Domain: (options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "eip712Domain", readonly []>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<readonly [`0x${string}`, string, string, bigint, `0x${string}`, `0x${string}`, readonly bigint[]]>;
            orders: (args: readonly [`0x${string}`], options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "orders", readonly [`0x${string}`]>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<readonly [boolean, `0x${string}`, `0x${string}`, bigint, bigint, bigint]>;
            token: (options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "token", readonly []>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<`0x${string}`>;
        };
        estimateGas: {
            initiate: (args: readonly [`0x${string}`, bigint, bigint, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiate", readonly [`0x${string}`, bigint, bigint, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            initiateWithSignature: (args: readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiateWithSignature", readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            instantRefund: (args: readonly [`0x${string}`, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "instantRefund", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            multicall: (args: readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "multicall", readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            redeem: (args: readonly [`0x${string}`, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "redeem", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            refund: (args: readonly [`0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "refund", readonly [`0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
        } & {
            initiate: (args: readonly [`0x${string}`, bigint, bigint, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiate", readonly [`0x${string}`, bigint, bigint, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            initiateWithSignature: (args: readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiateWithSignature", readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            instantRefund: (args: readonly [`0x${string}`, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "instantRefund", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            multicall: (args: readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "multicall", readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            redeem: (args: readonly [`0x${string}`, `0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "redeem", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            refund: (args: readonly [`0x${string}`], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "refund", readonly [`0x${string}`], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
        };
        simulate: {
            initiate: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`, bigint, bigint, `0x${string}`], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiate", readonly [`0x${string}`, bigint, bigint, `0x${string}`], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiate", readonly [`0x${string}`, bigint, bigint, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
            initiateWithSignature: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiateWithSignature", readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiateWithSignature", readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
            instantRefund: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`, `0x${string}`], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "instantRefund", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "instantRefund", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
            multicall: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "multicall", readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "multicall", readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
            redeem: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`, `0x${string}`], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "redeem", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "redeem", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
            refund: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "refund", readonly [`0x${string}`], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "refund", readonly [`0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
        };
        createEventFilter: {
            Initiated: <const args extends {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, strict extends boolean | undefined = undefined>(args: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | ({
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } extends infer T ? T extends {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } ? T extends args ? Readonly<args> : never : never : never), options?: ({
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } & {
                strict?: strict | undefined;
            }) | undefined) => Promise<import('viem').CreateContractEventFilterReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "Initiated", args, strict>>;
            Redeemed: <const args extends {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, strict extends boolean | undefined = undefined>(args: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | ({
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } extends infer T ? T extends {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } ? T extends args ? Readonly<args> : never : never : never), options?: ({
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } & {
                strict?: strict | undefined;
            }) | undefined) => Promise<import('viem').CreateContractEventFilterReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "Redeemed", args, strict>>;
            Refunded: <const args extends {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, strict extends boolean | undefined = undefined>(args: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | ({
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
            } extends infer T ? T extends {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
            } ? T extends args ? Readonly<args> : never : never : never), options?: ({
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } & {
                strict?: strict | undefined;
            }) | undefined) => Promise<import('viem').CreateContractEventFilterReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "Refunded", args, strict>>;
            EIP712DomainChanged: <const args extends readonly [] | undefined, strict extends boolean | undefined = undefined>(options?: ({
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } & {
                strict?: strict | undefined;
            }) | undefined) => Promise<import('viem').CreateContractEventFilterReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "EIP712DomainChanged", args, strict>>;
        };
        getEvents: {
            Initiated: (args?: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, options?: {
                blockHash?: import('viem').Hash | undefined;
                strict?: boolean | undefined;
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } | undefined) => Promise<import('viem').GetContractEventsReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "Initiated">>;
            Redeemed: (args?: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, options?: {
                blockHash?: import('viem').Hash | undefined;
                strict?: boolean | undefined;
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } | undefined) => Promise<import('viem').GetContractEventsReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "Redeemed">>;
            Refunded: (args?: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, options?: {
                blockHash?: import('viem').Hash | undefined;
                strict?: boolean | undefined;
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } | undefined) => Promise<import('viem').GetContractEventsReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "Refunded">>;
            EIP712DomainChanged: (options?: {
                blockHash?: import('viem').Hash | undefined;
                strict?: boolean | undefined;
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } | undefined) => Promise<import('viem').GetContractEventsReturnType<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "EIP712DomainChanged">>;
        };
        watchEvent: {
            Initiated: (args: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            }, options: {
                batch?: boolean | undefined;
                pollingInterval?: number | undefined;
                strict?: boolean | undefined;
                fromBlock?: import('viem').BlockNumber<bigint> | undefined;
                onError?: ((error: Error) => void) | undefined;
                onLogs: import('viem').WatchContractEventOnLogsFn<readonly [{
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "token_";
                        readonly type: "address";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "constructor";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "InvalidShortString";
                    readonly type: "error";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "string";
                        readonly name: "str";
                        readonly type: "string";
                    }];
                    readonly name: "StringTooLong";
                    readonly type: "error";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [];
                    readonly name: "EIP712DomainChanged";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly name: "Initiated";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "Redeemed";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "Refunded";
                    readonly type: "event";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "eip712Domain";
                    readonly outputs: readonly [{
                        readonly internalType: "bytes1";
                        readonly name: "fields";
                        readonly type: "bytes1";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "chainId";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "verifyingContract";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "salt";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256[]";
                        readonly name: "extensions";
                        readonly type: "uint256[]";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }];
                    readonly name: "initiate";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "initiateWithSignature";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "instantRefund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "address";
                            readonly name: "redeemer";
                            readonly type: "address";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "expiry";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "amount";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "bytes32";
                            readonly name: "secretHash";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "signature";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.InitWithSig[]";
                        readonly name: "inits";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "secret";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.Redeem[]";
                        readonly name: "redeems";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }];
                        readonly internalType: "struct HTLC.Refund[]";
                        readonly name: "refunds";
                        readonly type: "tuple[]";
                    }];
                    readonly name: "multicall";
                    readonly outputs: readonly [{
                        readonly internalType: "bool[]";
                        readonly name: "results";
                        readonly type: "bool[]";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "";
                        readonly type: "bytes32";
                    }];
                    readonly name: "orders";
                    readonly outputs: readonly [{
                        readonly internalType: "bool";
                        readonly name: "isFulfilled";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "address";
                        readonly name: "initiator";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initiatedAt";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "redeem";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "refund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "token";
                    readonly outputs: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "";
                        readonly type: "address";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }], "Initiated", undefined>;
                poll?: true | undefined;
            }) => import('viem').WatchContractEventReturnType;
            Redeemed: (args: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
                secretHash?: `0x${string}` | `0x${string}`[] | null | undefined;
            }, options: {
                batch?: boolean | undefined;
                pollingInterval?: number | undefined;
                strict?: boolean | undefined;
                fromBlock?: import('viem').BlockNumber<bigint> | undefined;
                onError?: ((error: Error) => void) | undefined;
                onLogs: import('viem').WatchContractEventOnLogsFn<readonly [{
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "token_";
                        readonly type: "address";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "constructor";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "InvalidShortString";
                    readonly type: "error";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "string";
                        readonly name: "str";
                        readonly type: "string";
                    }];
                    readonly name: "StringTooLong";
                    readonly type: "error";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [];
                    readonly name: "EIP712DomainChanged";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly name: "Initiated";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "Redeemed";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "Refunded";
                    readonly type: "event";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "eip712Domain";
                    readonly outputs: readonly [{
                        readonly internalType: "bytes1";
                        readonly name: "fields";
                        readonly type: "bytes1";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "chainId";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "verifyingContract";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "salt";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256[]";
                        readonly name: "extensions";
                        readonly type: "uint256[]";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }];
                    readonly name: "initiate";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "initiateWithSignature";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "instantRefund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "address";
                            readonly name: "redeemer";
                            readonly type: "address";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "expiry";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "amount";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "bytes32";
                            readonly name: "secretHash";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "signature";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.InitWithSig[]";
                        readonly name: "inits";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "secret";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.Redeem[]";
                        readonly name: "redeems";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }];
                        readonly internalType: "struct HTLC.Refund[]";
                        readonly name: "refunds";
                        readonly type: "tuple[]";
                    }];
                    readonly name: "multicall";
                    readonly outputs: readonly [{
                        readonly internalType: "bool[]";
                        readonly name: "results";
                        readonly type: "bool[]";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "";
                        readonly type: "bytes32";
                    }];
                    readonly name: "orders";
                    readonly outputs: readonly [{
                        readonly internalType: "bool";
                        readonly name: "isFulfilled";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "address";
                        readonly name: "initiator";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initiatedAt";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "redeem";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "refund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "token";
                    readonly outputs: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "";
                        readonly type: "address";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }], "Redeemed", undefined>;
                poll?: true | undefined;
            }) => import('viem').WatchContractEventReturnType;
            Refunded: (args: {
                orderID?: `0x${string}` | `0x${string}`[] | null | undefined;
            }, options: {
                batch?: boolean | undefined;
                pollingInterval?: number | undefined;
                strict?: boolean | undefined;
                fromBlock?: import('viem').BlockNumber<bigint> | undefined;
                onError?: ((error: Error) => void) | undefined;
                onLogs: import('viem').WatchContractEventOnLogsFn<readonly [{
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "token_";
                        readonly type: "address";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "constructor";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "InvalidShortString";
                    readonly type: "error";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "string";
                        readonly name: "str";
                        readonly type: "string";
                    }];
                    readonly name: "StringTooLong";
                    readonly type: "error";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [];
                    readonly name: "EIP712DomainChanged";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly name: "Initiated";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "Redeemed";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "Refunded";
                    readonly type: "event";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "eip712Domain";
                    readonly outputs: readonly [{
                        readonly internalType: "bytes1";
                        readonly name: "fields";
                        readonly type: "bytes1";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "chainId";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "verifyingContract";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "salt";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256[]";
                        readonly name: "extensions";
                        readonly type: "uint256[]";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }];
                    readonly name: "initiate";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "initiateWithSignature";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "instantRefund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "address";
                            readonly name: "redeemer";
                            readonly type: "address";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "expiry";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "amount";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "bytes32";
                            readonly name: "secretHash";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "signature";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.InitWithSig[]";
                        readonly name: "inits";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "secret";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.Redeem[]";
                        readonly name: "redeems";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }];
                        readonly internalType: "struct HTLC.Refund[]";
                        readonly name: "refunds";
                        readonly type: "tuple[]";
                    }];
                    readonly name: "multicall";
                    readonly outputs: readonly [{
                        readonly internalType: "bool[]";
                        readonly name: "results";
                        readonly type: "bool[]";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "";
                        readonly type: "bytes32";
                    }];
                    readonly name: "orders";
                    readonly outputs: readonly [{
                        readonly internalType: "bool";
                        readonly name: "isFulfilled";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "address";
                        readonly name: "initiator";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initiatedAt";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "redeem";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "refund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "token";
                    readonly outputs: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "";
                        readonly type: "address";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }], "Refunded", undefined>;
                poll?: true | undefined;
            }) => import('viem').WatchContractEventReturnType;
            EIP712DomainChanged: (options: {
                batch?: boolean | undefined;
                pollingInterval?: number | undefined;
                strict?: boolean | undefined;
                fromBlock?: import('viem').BlockNumber<bigint> | undefined;
                onError?: ((error: Error) => void) | undefined;
                onLogs: import('viem').WatchContractEventOnLogsFn<readonly [{
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "token_";
                        readonly type: "address";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "constructor";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "InvalidShortString";
                    readonly type: "error";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "string";
                        readonly name: "str";
                        readonly type: "string";
                    }];
                    readonly name: "StringTooLong";
                    readonly type: "error";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [];
                    readonly name: "EIP712DomainChanged";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly name: "Initiated";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly indexed: false;
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "Redeemed";
                    readonly type: "event";
                }, {
                    readonly anonymous: false;
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "Refunded";
                    readonly type: "event";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "eip712Domain";
                    readonly outputs: readonly [{
                        readonly internalType: "bytes1";
                        readonly name: "fields";
                        readonly type: "bytes1";
                    }, {
                        readonly internalType: "string";
                        readonly name: "name";
                        readonly type: "string";
                    }, {
                        readonly internalType: "string";
                        readonly name: "version";
                        readonly type: "string";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "chainId";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "verifyingContract";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "salt";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256[]";
                        readonly name: "extensions";
                        readonly type: "uint256[]";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }];
                    readonly name: "initiate";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "initiateWithSignature";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly name: "instantRefund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "address";
                            readonly name: "redeemer";
                            readonly type: "address";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "expiry";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "amount";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "bytes32";
                            readonly name: "secretHash";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "signature";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.InitWithSig[]";
                        readonly name: "inits";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "secret";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct HTLC.Redeem[]";
                        readonly name: "redeems";
                        readonly type: "tuple[]";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "bytes32";
                            readonly name: "orderID";
                            readonly type: "bytes32";
                        }];
                        readonly internalType: "struct HTLC.Refund[]";
                        readonly name: "refunds";
                        readonly type: "tuple[]";
                    }];
                    readonly name: "multicall";
                    readonly outputs: readonly [{
                        readonly internalType: "bool[]";
                        readonly name: "results";
                        readonly type: "bool[]";
                    }];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "";
                        readonly type: "bytes32";
                    }];
                    readonly name: "orders";
                    readonly outputs: readonly [{
                        readonly internalType: "bool";
                        readonly name: "isFulfilled";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "address";
                        readonly name: "initiator";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initiatedAt";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timelock";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly name: "redeem";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly name: "refund";
                    readonly outputs: readonly [];
                    readonly stateMutability: "nonpayable";
                    readonly type: "function";
                }, {
                    readonly inputs: readonly [];
                    readonly name: "token";
                    readonly outputs: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "";
                        readonly type: "address";
                    }];
                    readonly stateMutability: "view";
                    readonly type: "function";
                }], "EIP712DomainChanged", undefined>;
                poll?: true | undefined;
            }) => import('viem').WatchContractEventReturnType;
        };
        write: {
            initiate: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiate", readonly [`0x${string}`, bigint, bigint, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiate", readonly [`0x${string}`, bigint, bigint, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`, bigint, bigint, `0x${string}`], options: options) => Promise<import('viem').WriteContractReturnType>;
            initiateWithSignature: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiateWithSignature", readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "initiateWithSignature", readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`, bigint, bigint, `0x${string}`, `0x${string}`], options: options) => Promise<import('viem').WriteContractReturnType>;
            instantRefund: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "instantRefund", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "instantRefund", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`, `0x${string}`], options: options) => Promise<import('viem').WriteContractReturnType>;
            multicall: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "multicall", readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "multicall", readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [readonly {
                redeemer: `0x${string}`;
                expiry: bigint;
                amount: bigint;
                secretHash: `0x${string}`;
                signature: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
                secret: `0x${string}`;
            }[], readonly {
                orderID: `0x${string}`;
            }[]], options: options) => Promise<import('viem').WriteContractReturnType>;
            redeem: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "redeem", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "redeem", readonly [`0x${string}`, `0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`, `0x${string}`], options: options) => Promise<import('viem').WriteContractReturnType>;
            refund: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "refund", readonly [`0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token_";
                    readonly type: "address";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly name: "InvalidShortString";
                readonly type: "error";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "str";
                    readonly type: "string";
                }];
                readonly name: "StringTooLong";
                readonly type: "error";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [];
                readonly name: "EIP712DomainChanged";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly name: "Initiated";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly indexed: false;
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "Redeemed";
                readonly type: "event";
            }, {
                readonly anonymous: false;
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "Refunded";
                readonly type: "event";
            }, {
                readonly inputs: readonly [];
                readonly name: "eip712Domain";
                readonly outputs: readonly [{
                    readonly internalType: "bytes1";
                    readonly name: "fields";
                    readonly type: "bytes1";
                }, {
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }, {
                    readonly internalType: "string";
                    readonly name: "version";
                    readonly type: "string";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "chainId";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "verifyingContract";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "salt";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "extensions";
                    readonly type: "uint256[]";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }];
                readonly name: "initiate";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "initiateWithSignature";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly name: "instantRefund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "redeemer";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "expiry";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "secretHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "signature";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.InitWithSig[]";
                    readonly name: "inits";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "secret";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct HTLC.Redeem[]";
                    readonly name: "redeems";
                    readonly type: "tuple[]";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "orderID";
                        readonly type: "bytes32";
                    }];
                    readonly internalType: "struct HTLC.Refund[]";
                    readonly name: "refunds";
                    readonly type: "tuple[]";
                }];
                readonly name: "multicall";
                readonly outputs: readonly [{
                    readonly internalType: "bool[]";
                    readonly name: "results";
                    readonly type: "bool[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
                readonly name: "orders";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "isFulfilled";
                    readonly type: "bool";
                }, {
                    readonly internalType: "address";
                    readonly name: "initiator";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "initiatedAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "timelock";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly name: "redeem";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly name: "refund";
                readonly outputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
            }, {
                readonly inputs: readonly [];
                readonly name: "token";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
            }], "refund", readonly [`0x${string}`], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`], options: options) => Promise<import('viem').WriteContractReturnType>;
        };
        address: `0x${string}`;
        abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "token_";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "version";
                readonly type: "string";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidShortString";
            readonly type: "error";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "string";
                readonly name: "str";
                readonly type: "string";
            }];
            readonly name: "StringTooLong";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [];
            readonly name: "EIP712DomainChanged";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly indexed: true;
                readonly internalType: "bytes32";
                readonly name: "secretHash";
                readonly type: "bytes32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly name: "Initiated";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly indexed: true;
                readonly internalType: "bytes32";
                readonly name: "secretHash";
                readonly type: "bytes32";
            }, {
                readonly indexed: false;
                readonly internalType: "bytes";
                readonly name: "secret";
                readonly type: "bytes";
            }];
            readonly name: "Redeemed";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }];
            readonly name: "Refunded";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "eip712Domain";
            readonly outputs: readonly [{
                readonly internalType: "bytes1";
                readonly name: "fields";
                readonly type: "bytes1";
            }, {
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "version";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "chainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "verifyingContract";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "salt";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "extensions";
                readonly type: "uint256[]";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "redeemer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "timelock";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "secretHash";
                readonly type: "bytes32";
            }];
            readonly name: "initiate";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "redeemer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "timelock";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "secretHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly name: "initiateWithSignature";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly name: "instantRefund";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "redeemer";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "expiry";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "secretHash";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "signature";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct HTLC.InitWithSig[]";
                readonly name: "inits";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "secret";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct HTLC.Redeem[]";
                readonly name: "redeems";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "orderID";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct HTLC.Refund[]";
                readonly name: "refunds";
                readonly type: "tuple[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bool[]";
                readonly name: "results";
                readonly type: "bool[]";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes32";
                readonly name: "";
                readonly type: "bytes32";
            }];
            readonly name: "orders";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "isFulfilled";
                readonly type: "bool";
            }, {
                readonly internalType: "address";
                readonly name: "initiator";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "redeemer";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "initiatedAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timelock";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "secret";
                readonly type: "bytes";
            }];
            readonly name: "redeem";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }];
            readonly name: "refund";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "token";
            readonly outputs: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    }>;
    getERC20Contract(): Promise<{
        read: {
            symbol: (options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "symbol", readonly []>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<string>;
            name: (options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "name", readonly []>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<string>;
            allowance: (args: readonly [`0x${string}`, `0x${string}`], options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "allowance", readonly [`0x${string}`, `0x${string}`]>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<bigint>;
            balanceOf: (args: readonly [`0x${string}`], options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "balanceOf", readonly [`0x${string}`]>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<bigint>;
            decimals: (options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "decimals", readonly []>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<number>;
            totalSupply: (options?: import('viem').Prettify<import('viem').UnionOmit<import('viem').ReadContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "totalSupply", readonly []>, "address" | "args" | "abi" | "functionName">> | undefined) => Promise<bigint>;
        };
        estimateGas: {
            approve: (args: readonly [`0x${string}`, bigint], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "approve", readonly [`0x${string}`, bigint], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            transfer: (args: readonly [`0x${string}`, bigint], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transfer", readonly [`0x${string}`, bigint], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            transferFrom: (args: readonly [`0x${string}`, `0x${string}`, bigint], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transferFrom", readonly [`0x${string}`, `0x${string}`, bigint], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
        } & {
            approve: (args: readonly [`0x${string}`, bigint], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "approve", readonly [`0x${string}`, bigint], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            transfer: (args: readonly [`0x${string}`, bigint], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transfer", readonly [`0x${string}`, bigint], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
            transferFrom: (args: readonly [`0x${string}`, `0x${string}`, bigint], options: import('viem').Prettify<import('viem').UnionOmit<import('viem').EstimateContractGasParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transferFrom", readonly [`0x${string}`, `0x${string}`, bigint], import('viem').Chain | undefined>, "address" | "args" | "abi" | "functionName">>) => Promise<import('viem').EstimateContractGasReturnType>;
        };
        simulate: {
            approve: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`, bigint], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "approve", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "approve", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
            transfer: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`, bigint], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transfer", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transfer", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
            transferFrom: <chainOverride extends import('viem').Chain | undefined = undefined, accountOverride extends import('viem').Account | Address | undefined = undefined>(args: readonly [`0x${string}`, `0x${string}`, bigint], options?: Omit<import('viem').SimulateContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transferFrom", readonly [`0x${string}`, `0x${string}`, bigint], import('viem').Chain | undefined, chainOverride, accountOverride>, "address" | "args" | "abi" | "functionName"> | undefined) => Promise<import('viem').SimulateContractReturnType<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transferFrom", readonly [`0x${string}`, `0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride, accountOverride>>;
        };
        createEventFilter: {
            Approval: <const args extends {
                owner?: `0x${string}` | `0x${string}`[] | null | undefined;
                spender?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, strict extends boolean | undefined = undefined>(args: {
                owner?: `0x${string}` | `0x${string}`[] | null | undefined;
                spender?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | ({
                owner?: `0x${string}` | `0x${string}`[] | null | undefined;
                spender?: `0x${string}` | `0x${string}`[] | null | undefined;
            } extends infer T ? T extends {
                owner?: `0x${string}` | `0x${string}`[] | null | undefined;
                spender?: `0x${string}` | `0x${string}`[] | null | undefined;
            } ? T extends args ? Readonly<args> : never : never : never), options?: ({
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } & {
                strict?: strict | undefined;
            }) | undefined) => Promise<import('viem').CreateContractEventFilterReturnType<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "Approval", args, strict>>;
            Transfer: <const args extends {
                from?: `0x${string}` | `0x${string}`[] | null | undefined;
                to?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, strict extends boolean | undefined = undefined>(args: {
                from?: `0x${string}` | `0x${string}`[] | null | undefined;
                to?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | ({
                from?: `0x${string}` | `0x${string}`[] | null | undefined;
                to?: `0x${string}` | `0x${string}`[] | null | undefined;
            } extends infer T ? T extends {
                from?: `0x${string}` | `0x${string}`[] | null | undefined;
                to?: `0x${string}` | `0x${string}`[] | null | undefined;
            } ? T extends args ? Readonly<args> : never : never : never), options?: ({
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } & {
                strict?: strict | undefined;
            }) | undefined) => Promise<import('viem').CreateContractEventFilterReturnType<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "Transfer", args, strict>>;
        };
        getEvents: {
            Approval: (args?: {
                owner?: `0x${string}` | `0x${string}`[] | null | undefined;
                spender?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, options?: {
                blockHash?: import('viem').Hash | undefined;
                strict?: boolean | undefined;
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } | undefined) => Promise<import('viem').GetContractEventsReturnType<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "Approval">>;
            Transfer: (args?: {
                from?: `0x${string}` | `0x${string}`[] | null | undefined;
                to?: `0x${string}` | `0x${string}`[] | null | undefined;
            } | undefined, options?: {
                blockHash?: import('viem').Hash | undefined;
                strict?: boolean | undefined;
                fromBlock?: bigint | import('viem').BlockTag | undefined;
                toBlock?: bigint | import('viem').BlockTag | undefined;
            } | undefined) => Promise<import('viem').GetContractEventsReturnType<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "Transfer">>;
        };
        watchEvent: {
            Approval: (args: {
                owner?: `0x${string}` | `0x${string}`[] | null | undefined;
                spender?: `0x${string}` | `0x${string}`[] | null | undefined;
            }, options: {
                batch?: boolean | undefined;
                pollingInterval?: number | undefined;
                strict?: boolean | undefined;
                fromBlock?: import('viem').BlockNumber<bigint> | undefined;
                onError?: ((error: Error) => void) | undefined;
                onLogs: import('viem').WatchContractEventOnLogsFn<readonly [{
                    readonly type: "event";
                    readonly name: "Approval";
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly name: "owner";
                        readonly type: "address";
                    }, {
                        readonly indexed: true;
                        readonly name: "spender";
                        readonly type: "address";
                    }, {
                        readonly indexed: false;
                        readonly name: "value";
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "event";
                    readonly name: "Transfer";
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly name: "from";
                        readonly type: "address";
                    }, {
                        readonly indexed: true;
                        readonly name: "to";
                        readonly type: "address";
                    }, {
                        readonly indexed: false;
                        readonly name: "value";
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "allowance";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [{
                        readonly name: "owner";
                        readonly type: "address";
                    }, {
                        readonly name: "spender";
                        readonly type: "address";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "approve";
                    readonly stateMutability: "nonpayable";
                    readonly inputs: readonly [{
                        readonly name: "spender";
                        readonly type: "address";
                    }, {
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "bool";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "balanceOf";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [{
                        readonly name: "account";
                        readonly type: "address";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "decimals";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "uint8";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "name";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "string";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "symbol";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "string";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "totalSupply";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "transfer";
                    readonly stateMutability: "nonpayable";
                    readonly inputs: readonly [{
                        readonly name: "recipient";
                        readonly type: "address";
                    }, {
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "bool";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "transferFrom";
                    readonly stateMutability: "nonpayable";
                    readonly inputs: readonly [{
                        readonly name: "sender";
                        readonly type: "address";
                    }, {
                        readonly name: "recipient";
                        readonly type: "address";
                    }, {
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "bool";
                    }];
                }], "Approval", undefined>;
                poll?: true | undefined;
            }) => import('viem').WatchContractEventReturnType;
            Transfer: (args: {
                from?: `0x${string}` | `0x${string}`[] | null | undefined;
                to?: `0x${string}` | `0x${string}`[] | null | undefined;
            }, options: {
                batch?: boolean | undefined;
                pollingInterval?: number | undefined;
                strict?: boolean | undefined;
                fromBlock?: import('viem').BlockNumber<bigint> | undefined;
                onError?: ((error: Error) => void) | undefined;
                onLogs: import('viem').WatchContractEventOnLogsFn<readonly [{
                    readonly type: "event";
                    readonly name: "Approval";
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly name: "owner";
                        readonly type: "address";
                    }, {
                        readonly indexed: true;
                        readonly name: "spender";
                        readonly type: "address";
                    }, {
                        readonly indexed: false;
                        readonly name: "value";
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "event";
                    readonly name: "Transfer";
                    readonly inputs: readonly [{
                        readonly indexed: true;
                        readonly name: "from";
                        readonly type: "address";
                    }, {
                        readonly indexed: true;
                        readonly name: "to";
                        readonly type: "address";
                    }, {
                        readonly indexed: false;
                        readonly name: "value";
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "allowance";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [{
                        readonly name: "owner";
                        readonly type: "address";
                    }, {
                        readonly name: "spender";
                        readonly type: "address";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "approve";
                    readonly stateMutability: "nonpayable";
                    readonly inputs: readonly [{
                        readonly name: "spender";
                        readonly type: "address";
                    }, {
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "bool";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "balanceOf";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [{
                        readonly name: "account";
                        readonly type: "address";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "decimals";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "uint8";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "name";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "string";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "symbol";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "string";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "totalSupply";
                    readonly stateMutability: "view";
                    readonly inputs: readonly [];
                    readonly outputs: readonly [{
                        readonly type: "uint256";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "transfer";
                    readonly stateMutability: "nonpayable";
                    readonly inputs: readonly [{
                        readonly name: "recipient";
                        readonly type: "address";
                    }, {
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "bool";
                    }];
                }, {
                    readonly type: "function";
                    readonly name: "transferFrom";
                    readonly stateMutability: "nonpayable";
                    readonly inputs: readonly [{
                        readonly name: "sender";
                        readonly type: "address";
                    }, {
                        readonly name: "recipient";
                        readonly type: "address";
                    }, {
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly outputs: readonly [{
                        readonly type: "bool";
                    }];
                }], "Transfer", undefined>;
                poll?: true | undefined;
            }) => import('viem').WatchContractEventReturnType;
        };
        write: {
            approve: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "approve", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "approve", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`, bigint], options: options) => Promise<import('viem').WriteContractReturnType>;
            transfer: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transfer", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transfer", readonly [`0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`, bigint], options: options) => Promise<import('viem').WriteContractReturnType>;
            transferFrom: <chainOverride extends import('viem').Chain | undefined, options extends import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transferFrom", readonly [`0x${string}`, `0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName"> extends infer T ? { [K in keyof T]: import('viem').UnionOmit<import('viem').WriteContractParameters<readonly [{
                readonly type: "event";
                readonly name: "Approval";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "event";
                readonly name: "Transfer";
                readonly inputs: readonly [{
                    readonly indexed: true;
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly indexed: true;
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly indexed: false;
                    readonly name: "value";
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "allowance";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "owner";
                    readonly type: "address";
                }, {
                    readonly name: "spender";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "approve";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "spender";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "balanceOf";
                readonly stateMutability: "view";
                readonly inputs: readonly [{
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "decimals";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint8";
                }];
            }, {
                readonly type: "function";
                readonly name: "name";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "symbol";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "string";
                }];
            }, {
                readonly type: "function";
                readonly name: "totalSupply";
                readonly stateMutability: "view";
                readonly inputs: readonly [];
                readonly outputs: readonly [{
                    readonly type: "uint256";
                }];
            }, {
                readonly type: "function";
                readonly name: "transfer";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }, {
                readonly type: "function";
                readonly name: "transferFrom";
                readonly stateMutability: "nonpayable";
                readonly inputs: readonly [{
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly outputs: readonly [{
                    readonly type: "bool";
                }];
            }], "transferFrom", readonly [`0x${string}`, `0x${string}`, bigint], import('viem').Chain | undefined, import('viem').Account | undefined, chainOverride>, "address" | "args" | "abi" | "functionName">[K]; } : never>(args: readonly [`0x${string}`, `0x${string}`, bigint], options: options) => Promise<import('viem').WriteContractReturnType>;
        };
        address: `0x${string}`;
        abi: readonly [{
            readonly type: "event";
            readonly name: "Approval";
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly name: "value";
                readonly type: "uint256";
            }];
        }, {
            readonly type: "event";
            readonly name: "Transfer";
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly name: "value";
                readonly type: "uint256";
            }];
        }, {
            readonly type: "function";
            readonly name: "allowance";
            readonly stateMutability: "view";
            readonly inputs: readonly [{
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly name: "spender";
                readonly type: "address";
            }];
            readonly outputs: readonly [{
                readonly type: "uint256";
            }];
        }, {
            readonly type: "function";
            readonly name: "approve";
            readonly stateMutability: "nonpayable";
            readonly inputs: readonly [{
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly outputs: readonly [{
                readonly type: "bool";
            }];
        }, {
            readonly type: "function";
            readonly name: "balanceOf";
            readonly stateMutability: "view";
            readonly inputs: readonly [{
                readonly name: "account";
                readonly type: "address";
            }];
            readonly outputs: readonly [{
                readonly type: "uint256";
            }];
        }, {
            readonly type: "function";
            readonly name: "decimals";
            readonly stateMutability: "view";
            readonly inputs: readonly [];
            readonly outputs: readonly [{
                readonly type: "uint8";
            }];
        }, {
            readonly type: "function";
            readonly name: "name";
            readonly stateMutability: "view";
            readonly inputs: readonly [];
            readonly outputs: readonly [{
                readonly type: "string";
            }];
        }, {
            readonly type: "function";
            readonly name: "symbol";
            readonly stateMutability: "view";
            readonly inputs: readonly [];
            readonly outputs: readonly [{
                readonly type: "string";
            }];
        }, {
            readonly type: "function";
            readonly name: "totalSupply";
            readonly stateMutability: "view";
            readonly inputs: readonly [];
            readonly outputs: readonly [{
                readonly type: "uint256";
            }];
        }, {
            readonly type: "function";
            readonly name: "transfer";
            readonly stateMutability: "nonpayable";
            readonly inputs: readonly [{
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly outputs: readonly [{
                readonly type: "bool";
            }];
        }, {
            readonly type: "function";
            readonly name: "transferFrom";
            readonly stateMutability: "nonpayable";
            readonly inputs: readonly [{
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly outputs: readonly [{
                readonly type: "bool";
            }];
        }];
    }>;
    /**
     * The atomic swap contract address associated with the passed chain
     *
     * @returns {string} The contract address
     */
    id(): string;
    /**
     * Initiates the HTLC
     *
     * @returns {Promise<string>} Transaction ID
     */
    init(): Promise<string>;
    /**
     * Redeems the HTLC
     *
     * @returns {Promise<string>} Transaction ID
     */
    redeem(secret: string): Promise<string>;
    private getOrderId;
    /**
     * Refunds the HTLC
     *
     * @returns {Promise<string>} Transaction ID
     */
    refund(): Promise<string>;
}
