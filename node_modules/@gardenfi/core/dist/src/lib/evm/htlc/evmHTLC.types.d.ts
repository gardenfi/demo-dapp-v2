import { MarkRequired } from '@catalogfi/utils';
import { OnChainIdentifier } from '@catalogfi/wallets';
import { Address } from 'viem';

export type AtomicSwapConfig = {
    secretHash: string;
    /**
     * The number of blocks before the swap expires
     */
    expiryBlocks: number;
    /**
     * Amount in it's lowest denomination
     */
    amount: bigint;
    recipientAddress: OnChainIdentifier;
    refundAddress: OnChainIdentifier;
    initiatorAddress: OnChainIdentifier;
    contractAddress?: Address;
    chain?: number;
};
export type EVMSwapConfig = MarkRequired<AtomicSwapConfig, 'chain' | 'contractAddress'>;
export declare const EVMHTLCErrors: {
    INVALID_SECRET_HASH: string;
    INSUFFICIENT_TOKENS: string;
    ORDER_INITIATED: string;
    INVALID_SECRET: string;
    ORDER_NOT_EXPIRED: string;
    INSUFFICIENT_FUNDS: (balance: string, required: string) => string;
};
