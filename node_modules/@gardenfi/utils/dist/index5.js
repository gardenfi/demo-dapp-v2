class r extends URL {
  constructor(t, s) {
    super(t, s);
  }
  endpoint(t) {
    t.startsWith("/") || (t = `/${t}`);
    const s = `${this.pathname !== "/" ? this.pathname : ""}${t}`;
    return new r(s, this);
  }
  socket() {
    if (this.protocol === "https:")
      return this.origin.replace("https", "wss");
    if (this.protocol === "http:")
      return this.origin.replace("http", "ws");
    throw new Error("Invalid protocol");
  }
  addSearchParams(t) {
    const s = new URLSearchParams(this.search);
    for (const e in t)
      s.set(e, t[e]);
    return new r(`${this.pathname}?${s.toString()}`, this);
  }
}
export {
  r as Url
};
