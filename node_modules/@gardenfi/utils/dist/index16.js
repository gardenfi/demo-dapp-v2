import { IntegerOutOfRangeError as s } from "./index32.js";
import { pad as u } from "./index33.js";
function x(i, m = {}) {
  const { signed: o, size: t } = m, e = BigInt(i);
  let n;
  t ? o ? n = (1n << BigInt(t) * 8n - 1n) - 1n : n = 2n ** (BigInt(t) * 8n) - 1n : typeof i == "number" && (n = BigInt(Number.MAX_SAFE_INTEGER));
  const f = typeof n == "bigint" && o ? -n - 1n : 0;
  if (n && e > n || e < f) {
    const r = typeof i == "bigint" ? "n" : "";
    throw new s({
      max: n ? `${n}${r}` : void 0,
      min: `${f}${r}`,
      signed: o,
      size: t,
      value: `${i}${r}`
    });
  }
  const g = `0x${(o && e < 0 ? (1n << BigInt(t * 8)) + BigInt(e) : e).toString(16)}`;
  return t ? u(g, { size: t }) : g;
}
export {
  x as numberToHex
};
