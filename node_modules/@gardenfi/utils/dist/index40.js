import { InvalidAddressError as c } from "./index41.js";
import { stringToBytes as m } from "./index42.js";
import { keccak256 as p } from "./index43.js";
import { LruMap as u } from "./index44.js";
import { isAddress as $ } from "./index45.js";
const s = /* @__PURE__ */ new u(8192);
function h(t, e) {
  if (s.has(`${t}.${e}`))
    return s.get(`${t}.${e}`);
  const i = t.substring(2).toLowerCase(), n = p(m(i)), o = i.split("");
  for (let r = 0; r < 40; r += 2)
    n[r >> 1] >> 4 >= 8 && o[r] && (o[r] = o[r].toUpperCase()), (n[r >> 1] & 15) >= 8 && o[r + 1] && (o[r + 1] = o[r + 1].toUpperCase());
  const f = `0x${o.join("")}`;
  return s.set(`${t}.${e}`, f), f;
}
function w(t, e) {
  if (!$(t, { strict: !1 }))
    throw new c({ address: t });
  return h(t, e);
}
export {
  h as checksumAddress,
  w as getAddress
};
