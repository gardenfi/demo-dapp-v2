import { TransactionNotFoundError as p } from "./index21.js";
import { numberToHex as i } from "./index16.js";
import { formatTransaction as T } from "./index22.js";
async function h(e, { blockHash: a, blockNumber: r, blockTag: c, hash: o, index: n }) {
  var d, f, u;
  const s = c || "latest", m = r !== void 0 ? i(r) : void 0;
  let t = null;
  if (o ? t = await e.request({
    method: "eth_getTransactionByHash",
    params: [o]
  }, { dedupe: !0 }) : a ? t = await e.request({
    method: "eth_getTransactionByBlockHashAndIndex",
    params: [a, i(n)]
  }, { dedupe: !0 }) : (m || s) && (t = await e.request({
    method: "eth_getTransactionByBlockNumberAndIndex",
    params: [m || s, i(n)]
  }, { dedupe: !!m })), !t)
    throw new p({
      blockHash: a,
      blockNumber: r,
      blockTag: s,
      hash: o,
      index: n
    });
  return (((u = (f = (d = e.chain) == null ? void 0 : d.formatters) == null ? void 0 : f.transaction) == null ? void 0 : u.format) || T)(t);
}
export {
  h as getTransaction
};
