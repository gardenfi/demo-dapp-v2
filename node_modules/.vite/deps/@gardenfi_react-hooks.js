import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  useWalletClient
} from "./chunk-5ZVCRW2G.js";
import "./chunk-LLPXV5CD.js";
import "./chunk-X6JMOPK6.js";
import "./chunk-IDITF52X.js";
import "./chunk-EN27IUAC.js";
import "./chunk-JHATJSUY.js";
import {
  require_react
} from "./chunk-6BX3RX47.js";
import {
  Xa,
  Xi,
  Ya,
  _l,
  dl,
  gl,
  hn,
  yl
} from "./chunk-WPTXHL6F.js";
import {
  I,
  o,
  r,
  r2
} from "./chunk-7UECOOSC.js";
import "./chunk-SB3BTP7W.js";
import "./chunk-GERKKGSP.js";
import "./chunk-EPBOGNF7.js";
import "./chunk-TULU6TML.js";
import "./chunk-GOLCTIEX.js";
import "./chunk-XBLCQEYA.js";
import "./chunk-L4Z2TVB6.js";
import {
  F,
  e,
  k as k2
} from "./chunk-IAEW6RMH.js";
import "./chunk-7SINFEUH.js";
import "./chunk-5DQMGCJB.js";
import "./chunk-U3XSLDWE.js";
import "./chunk-IL4DCKII.js";
import "./chunk-6BCIRRQU.js";
import "./chunk-GKN3A7PC.js";
import "./chunk-YMACZOKO.js";
import {
  W,
  b,
  k
} from "./chunk-64BDWLZ5.js";
import "./chunk-MNXH7TI4.js";
import "./chunk-IMNFBB4U.js";
import "./chunk-JZX67L7D.js";
import "./chunk-YUGJFHN2.js";
import "./chunk-SKEEBPSX.js";
import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-HKR3LW4X.js";

// node_modules/@gardenfi/react-hooks/dist/index.js
var import_dist34 = __toESM(require_dist());
var import_dist35 = __toESM(require_dist2());
var import_dist36 = __toESM(require_dist3());

// node_modules/@gardenfi/react-hooks/dist/index2.js
var import_dist31 = __toESM(require_dist(), 1);
var import_dist32 = __toESM(require_dist2(), 1);
var import_dist33 = __toESM(require_dist3(), 1);
var import_react2 = __toESM(require_react(), 1);

// node_modules/@gardenfi/react-hooks/dist/index4.js
var import_dist = __toESM(require_dist(), 1);
var import_dist2 = __toESM(require_dist2(), 1);
var import_dist3 = __toESM(require_dist3(), 1);
var s = (i4) => {
  const { data: r5 } = useWalletClient();
  return { initializeSecretManager: async () => {
    if (!r5) return b("WalletClient not initialized");
    const e2 = await hn.fromWalletClient(r5);
    return e2.error ? b(e2.error) : (i4(e2.val), e2);
  } };
};

// node_modules/@gardenfi/react-hooks/dist/index3.js
var import_dist25 = __toESM(require_dist(), 1);
var import_dist26 = __toESM(require_dist2(), 1);
var import_dist27 = __toESM(require_dist3(), 1);

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index.js
var import_dist22 = __toESM(require_dist());
var import_dist23 = __toESM(require_dist2());
var import_dist24 = __toESM(require_dist3());

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index2.js
var import_dist13 = __toESM(require_dist(), 1);
var import_dist14 = __toESM(require_dist2(), 1);
var import_dist15 = __toESM(require_dist3(), 1);

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index6.js
var import_dist4 = __toESM(require_dist(), 1);
var import_dist5 = __toESM(require_dist2(), 1);
var import_dist6 = __toESM(require_dist3(), 1);
var n = "https://api.garden.finance";

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index4.js
var import_dist10 = __toESM(require_dist(), 1);
var import_dist11 = __toESM(require_dist2(), 1);
var import_dist12 = __toESM(require_dist3(), 1);

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index7.js
var import_dist7 = __toESM(require_dist(), 1);
var import_dist8 = __toESM(require_dist2(), 1);
var import_dist9 = __toESM(require_dist3(), 1);
var i = (o3, e2, t3) => {
  const r5 = o3.endpoint(e2);
  return t3 && Object.entries(t3).forEach(([c2, n4]) => {
    n4 !== void 0 && r5.searchParams.append(c2, n4.toString());
  }), r5;
};

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index4.js
var w = class {
  constructor(t3) {
    this.url = new r2("/orders", t3);
  }
  async getOrder(t3, o3) {
    const e2 = o3 ? `/id/matched/${t3}` : `/id/unmatched/${t3}`, n4 = this.url.endpoint(e2);
    try {
      const r5 = await k.get(n4);
      return r5.error ? b(r5.error) : r5.result ? W(r5.result) : b("GetOrder: Unexpected error, result is undefined");
    } catch (r5) {
      return b("GetOrder:", String(r5));
    }
  }
  async getMatchedOrders(t3, o3, e2) {
    const n4 = i(this.url, `/user/matched/${t3}`, {
      ...e2,
      pending: o3
    });
    try {
      const r5 = await k.get(
        n4
      );
      return r5.error ? b(r5.error) : r5.result ? W(r5.result) : b("GetMatchedOrders: Unexpected error, result is undefined");
    } catch (r5) {
      return b("GetMatchedOrders:", String(r5));
    }
  }
  async getUnMatchedOrders(t3, o3) {
    const e2 = i(
      this.url,
      `/user/unmatched/${t3}`,
      o3
    );
    try {
      const n4 = await k.get(
        e2
      );
      return n4.error ? b(n4.error) : n4.result ? W(n4.result) : b("GetUnMatchedOrders: Unexpected error, result is undefined");
    } catch (n4) {
      return b("GetUnMatchedOrders:", String(n4));
    }
  }
  async getOrders(t3, o3) {
    const e2 = t3 ? "/matched" : "/unmatched", n4 = i(this.url, e2, o3);
    try {
      const r5 = await k.get(n4);
      return r5.error ? b(r5.error) : r5.result ? W(r5.result) : b("GetAllOrders: Unexpected error, result is undefined");
    } catch (r5) {
      return b("GetAllOrders:", String(r5));
    }
  }
  async subscribeOrders(t3, o3, e2, n4, r5 = false, l2) {
    let a2 = false;
    const h2 = async () => {
      if (!a2) {
        a2 = true;
        try {
          const c2 = o3 ? await this.getMatchedOrders(t3, r5, l2) : await this.getUnMatchedOrders(t3, l2);
          c2.ok ? await n4(
            c2.val
          ) : console.error("Error fetching orders:", c2.error);
        } catch (c2) {
          console.error("Error fetching orders:", c2);
        } finally {
          a2 = false;
        }
      }
    };
    await h2();
    const O = setInterval(h2, e2);
    return () => {
      clearInterval(O);
    };
  }
  async getOrdersCount(t3) {
    const o3 = this.url.endpoint(`/user/count/${t3}`);
    try {
      const e2 = await k.get(o3);
      return e2.error ? b(e2.error) : e2.status === o.Ok && e2.result !== void 0 ? W(e2.result) : b("GetOrdersCount: Unexpected error, result is undefined");
    } catch (e2) {
      return b("GetOrdersCount:", String(e2));
    }
  }
};

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index2.js
var c = class _c extends w {
  /**
   * Creates an instance of Orderbook. Does not login to the orderbook.
   * @constructor
   * @param {OrderbookConfig} orderbookConfig - The configuration object for the orderbook.
   */
  constructor(r5) {
    const e2 = new r2(
      "/relayer",
      r5.url ?? n
    );
    super(e2), this.Url = e2, this.walletClient = r5.walletClient, this.auth = r5.auth;
  }
  /**
   * Initializes the orderbook as well as logs in the orderbook (fetches the auth token).
   * @param {OrderbookConfig} orderbookConfig - The configuration object for the orderbook.
   */
  static async init(r5) {
    return await r5.auth.getToken(), new _c(r5);
  }
  /**
   * Creates an order
   * @param {CreateOrderConfig} createOrderConfig - The configuration for the creating the order.
   * @returns {string} The create order ID.
   */
  async createOrder(r5) {
    const e2 = await this.auth.getToken();
    if (e2.error) return b(e2.error);
    try {
      const t3 = await k.post(
        this.Url.endpoint("create-order"),
        {
          body: JSON.stringify(r5),
          headers: {
            Authorization: r(e2.val),
            "Content-Type": "application/json"
          }
        }
      );
      return t3.error ? b(t3.error) : t3.result ? W(t3.result) : b("CreateOrder: Unexpected error, result is undefined");
    } catch (t3) {
      return b("CreateOrder:", String(t3));
    }
  }
  async fetchOrders(r5, e2 = false, t3) {
    var n4;
    const a2 = (n4 = this.walletClient.account) == null ? void 0 : n4.address;
    return a2 ? r5 ? await super.getMatchedOrders(
      a2,
      e2,
      t3
    ) : await super.getUnMatchedOrders(
      a2,
      t3
    ) : b("Wallet client does not have an account");
  }
  /**
   * Wrapper for the subscribeOrders method in the OrdersProvider class to abstract the address parameter.
   * @param matched - Whether to get matched or unmatched orders
   * @param interval - The interval to poll for updates
   * @param cb - The callback to be called when the orders are updated
   * @param paginationConfig - The configuration for the pagination
   * @returns {() => void} A function to unsubscribe from the order updates
   */
  async subscribeToOrders(r5, e2, t3, a2, n4) {
    var u2;
    const i4 = (u2 = this.walletClient.account) == null ? void 0 : u2.address;
    return i4 ? await super.subscribeOrders(
      i4,
      r5,
      e2,
      t3,
      n4,
      a2
    ) : () => {
    };
  }
  async getUserOrdersCount() {
    var e2;
    const r5 = (e2 = this.walletClient.account) == null ? void 0 : e2.address;
    return r5 ? super.getOrdersCount(r5) : b("Wallet client does not have an account");
  }
};

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index3.js
var import_dist16 = __toESM(require_dist(), 1);
var import_dist17 = __toESM(require_dist2(), 1);
var import_dist18 = __toESM(require_dist3(), 1);
var r3 = ((e2) => (e2.Bitcoin = "Bitcoin", e2.EVM = "EVM", e2))(r3 || {});
var i2 = ((e2) => (e2.mainnet = "mainnet", e2.testnet = "testnet", e2.localnet = "localnet", e2))(i2 || {});
var t = {
  bitcoin: "bitcoin",
  bitcoin_testnet: "bitcoin_testnet",
  bitcoin_regtest: "bitcoin_regtest",
  ethereum: "ethereum",
  ethereum_arbitrum: "ethereum_arbitrum",
  ethereum_sepolia: "ethereum_sepolia",
  arbitrum_localnet: "arbitrum_localnet",
  arbitrum_sepolia: "arbitrum_sepolia",
  ethereum_localnet: "ethereum_localnet",
  base_sepolia: "base_sepolia"
};
var o2 = (e2) => e2 === t.bitcoin || e2 === t.bitcoin_testnet || e2 === t.bitcoin_regtest;

// node_modules/@gardenfi/react-hooks/node_modules/@gardenfi/orderbook/dist/index5.js
var import_dist19 = __toESM(require_dist(), 1);
var import_dist20 = __toESM(require_dist2(), 1);
var import_dist21 = __toESM(require_dist3(), 1);
var n2 = {
  name: "Bitcoin Regtest",
  decimals: 8,
  symbol: "BTC",
  chain: t.bitcoin_regtest,
  atomicSwapAddress: "primary",
  tokenAddress: "primary"
};
var a = {
  name: "WBTC Arbitrum Localnet",
  decimals: 8,
  symbol: "WBTC",
  chain: t.arbitrum_localnet,
  atomicSwapAddress: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  tokenAddress: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
};
var t2 = {
  name: "WBTC Ethereum Localnet",
  decimals: 8,
  symbol: "WBTC",
  chain: t.ethereum_localnet,
  atomicSwapAddress: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  tokenAddress: "0x5FbDB2315678afecb367f032d93F642f64180aa3"
};
var d = {
  localnet: {
    [`${t.arbitrum_localnet}_0xdc64a140aa3e981100a9beca4e685f962f0cf6c9`]: a,
    [`${t.ethereum_localnet}_0xe7f1725e7734ce288f8367e1bb143e90bb3f0512`]: t2
  },
  testnet: {
    [`${t.bitcoin_testnet}_primary`]: {
      name: "BTC",
      decimals: 8,
      symbol: "BTC",
      chain: t.bitcoin_testnet,
      tokenAddress: "primary",
      atomicSwapAddress: "primary"
    },
    [`${t.ethereum_sepolia}_0x3c6a17b8cd92976d1d91e491c93c98cd81998265`]: {
      name: "Wrapped Bitcoin",
      decimals: 8,
      symbol: "WBTC",
      chain: t.ethereum_sepolia,
      logo: "https://garden-finance.imgix.net/token-images/wbtc.svg",
      tokenAddress: "0x4D68da063577F98C55166c7AF6955cF58a97b20A",
      atomicSwapAddress: "0x3C6a17b8cD92976D1D91E491c93c98cd81998265"
    },
    [`${t.arbitrum_sepolia}_0x1cd0bbd55fd66b4c5f7dfe434efd009c09e628d1`]: {
      name: "Wrapped Bitcoin",
      decimals: 8,
      symbol: "WBTC",
      logo: "https://garden-finance.imgix.net/token-images/wbtc.svg",
      chain: t.arbitrum_sepolia,
      tokenAddress: "0x00ab86f54F436CfE15253845F139955ae0C00bAf",
      atomicSwapAddress: "0x1cd0bBd55fD66B4C5F7dfE434eFD009C09e628d1"
    },
    [`${t.arbitrum_sepolia}_0xd5fedb4cecb0f1d32788a190d9eb47d94d23ee4e`]: {
      name: "Seed",
      decimals: 18,
      symbol: "SEED",
      chain: t.arbitrum_sepolia,
      logo: "https://garden-finance.imgix.net/token-images/seed.svg",
      tokenAddress: "0x13DCec0762EcC5E666c207ab44Dc768e5e33070F",
      atomicSwapAddress: "0xD5FeDb4ceCB0F1D32788a190d9EB47D94D23eE4e"
    },
    [`${t.base_sepolia}_0x00ab86f54f436cfe15253845f139955ae0c00baf`]: {
      name: "Wrapped Bitcoin",
      decimals: 8,
      symbol: "WBTC",
      chain: t.base_sepolia,
      logo: "https://garden-finance.imgix.net/token-images/wbtc.svg",
      tokenAddress: "0x13DCec0762EcC5E666c207ab44Dc768e5e33070F",
      atomicSwapAddress: "0x00ab86f54F436CfE15253845F139955ae0C00bAf"
    }
  },
  mainnet: {}
};

// node_modules/@gardenfi/react-hooks/dist/index3.js
var import_react = __toESM(require_react(), 1);
var E = (o3, n4, m2, s4) => {
  const [r5, p] = (0, import_react.useState)(), { data: i4 } = useWalletClient();
  return (0, import_react.useEffect)(() => {
    if (!i4 || !o3 || !n4) return;
    const e2 = new c({
      url: o3,
      walletClient: i4,
      auth: n4
    });
    p(e2);
  }, [i4, o3, n4]), (0, import_react.useEffect)(() => {
    !r5 || !s4 || s4.fetchBlockNumbers().then((e2) => {
      if (e2.error) return;
      const { val: a2 } = e2;
      r5.fetchOrders(true, true, {
        per_page: 500
      }).then((u2) => {
        if (u2.error) return;
        const d2 = Ya(u2.val.data).map((t3) => {
          const c2 = a2[t3.source_swap.chain], f = a2[t3.destination_swap.chain];
          if (!c2 || !f) return;
          const b3 = Xi(
            t3,
            c2,
            f
          );
          return {
            ...t3,
            status: b3
          };
        }).filter((t3) => t3 !== void 0);
        m2(d2);
      });
    });
  }, [r5, s4]), { orderbook: r5 };
};

// node_modules/@gardenfi/react-hooks/dist/index5.js
var import_dist28 = __toESM(require_dist(), 1);
var import_dist29 = __toESM(require_dist2(), 1);
var import_dist30 = __toESM(require_dist3(), 1);
var r4 = (a2, c2) => `${a2.chain}:${a2.atomicSwapAddress}::${c2.chain}:${c2.atomicSwapAddress}`;

// node_modules/@gardenfi/react-hooks/dist/index2.js
var g = (0, import_react2.createContext)({
  isExecuting: false
});
var ce = ({
  children: v,
  config: r5
}) => {
  const [l2, z] = (0, import_react2.useState)(), [s4, B] = (0, import_react2.useState)(), [n4, A] = (0, import_react2.useState)(), [f, P] = (0, import_react2.useState)(), K = (0, import_react2.useMemo)(
    () => !!(l2 && s4 && n4 && f),
    [l2, s4, n4, f]
  ), u2 = (0, import_react2.useMemo)(() => new _l(r5.quoteUrl), [r5.quoteUrl]), U = (0, import_react2.useMemo)(() => {
    const e2 = r5.network === e.Mainnet ? "mainnet" : r5.network === e.Testnet ? "testnet" : void 0;
    return r5.blockNumberFetcherUrl && e2 ? new gl(
      r5.blockNumberFetcherUrl,
      e2
    ) : void 0;
  }, [r5.blockNumberFetcherUrl, r5.network]), y = (0, import_react2.useMemo)(
    () => new F(r5.network, r5.bitcoinRPCUrl),
    [r5.network, r5.bitcoinRPCUrl]
  ), { data: a2 } = useWalletClient(), { initializeSecretManager: O } = s(z), { orderbook: h2 } = E(
    r5.orderBookUrl,
    n4,
    P,
    U
  ), M = async () => {
    if (!a2 || !n4)
      return b("WalletClient or auth not initialized");
    const e2 = await O();
    if (e2.error) return b(e2.error);
    const o3 = k2.fromPrivateKey(
      e2.val.getMasterPrivKey(),
      y
    ), t3 = new yl({
      orderbookURl: r5.orderBookUrl,
      secretManager: e2.val,
      quote: u2,
      auth: n4,
      wallets: {
        evmWallet: a2,
        btcWallet: o3
      },
      blockNumberFetcher: U
    });
    return B(t3), W(t3);
  }, q = async (e2) => {
    if (!h2 || !a2 || !n4)
      return b("Orderbook or walletClient or auth not initialized");
    let o3 = s4;
    if (!l2 || !o3) {
      const C = await M();
      if (C.error) return b(C.error);
      o3 = C.val;
    }
    const t3 = await o3.swap(e2);
    if (t3.error) return b(t3.error);
    if (o2(t3.val.source_swap.chain)) return W(t3.val);
    const c2 = await dl(
      e2.fromAsset.chain,
      a2
    );
    if (c2.error)
      return b("Failed to switch network: " + c2.error);
    const _ = c2.val.walletClient, d2 = await new Xa(t3.val, r5.orderBookUrl, n4).init(_);
    if (d2.error) return b(d2.error);
    const w2 = {
      ...t3.val,
      source_swap: {
        ...t3.val.source_swap,
        initiate_tx_hash: d2.val
      }
    };
    return W(w2);
  }, Q = async (e2) => {
    if (!a2 || !n4)
      return b("Orderbook or walletClient or auth not initialized");
    if (o2(e2.source_swap.chain))
      return b("Not an EVM order: sourceSwap.chain is Bitcoin");
    let o3 = s4;
    if (!l2 || !o3) {
      const w2 = await M();
      if (w2.error) return b(w2.error);
      o3 = w2.val;
    }
    const t3 = await dl(
      e2.source_swap.chain,
      a2
    );
    if (t3.error)
      return b("Failed to switch network: " + t3.error);
    const c2 = t3.val.walletClient, k3 = await new Xa(e2, r5.orderBookUrl, n4).init(c2);
    if (k3.error) return b(k3.error);
    const d2 = {
      ...e2,
      source_swap: {
        ...e2.source_swap,
        initiate_tx_hash: k3.val
      }
    };
    return W(d2);
  }, I2 = (0, import_react2.useMemo)(
    () => async ({ fromAsset: e2, toAsset: o3, amount: t3, isExactOut: c2 = false }) => await u2.getQuote(
      r4(e2, o3),
      t3,
      c2
    ),
    [u2]
  );
  return (0, import_react2.useEffect)(() => {
    if (!a2) return;
    const e2 = new I(new r2(r5.orderBookUrl), a2, {
      store: r5.store
    });
    A(e2);
  }, [a2]), (0, import_react2.useEffect)(() => {
    if (!l2 || !a2 || !h2 || !n4) return;
    const e2 = k2.fromPrivateKey(
      l2.getMasterPrivKey(),
      y
    ), o3 = new yl({
      orderbookURl: r5.orderBookUrl,
      secretManager: l2,
      quote: u2,
      auth: n4,
      wallets: {
        evmWallet: a2,
        btcWallet: e2
      },
      blockNumberFetcher: U
    });
    B(o3);
  }, [l2, a2, h2, n4]), (0, import_react2.useEffect)(() => {
    if (!s4) return;
    const e2 = s4.execute(), o3 = (t3) => P(t3);
    return s4.on("onPendingOrdersChanged", o3), () => {
      (async () => (await e2)())(), s4.off("onPendingOrdersChanged", o3);
    };
  }, [s4]), import_react2.default.createElement(
    g.Provider,
    {
      value: {
        orderBookUrl: r5.orderBookUrl,
        initializeSecretManager: O,
        orderBook: h2,
        swapAndInitiate: q,
        pendingOrders: f,
        getQuote: I2,
        secretManager: l2,
        garden: s4,
        isExecuting: K,
        evmInitiate: Q,
        quote: u2
      }
    },
    v
  );
};
var ue = () => {
  const v = import_react2.default.useContext(g);
  if (!v)
    throw new Error("useGarden must be used within a GardenProvider");
  return v;
};
export {
  e as BitcoinNetwork,
  ce as GardenProvider,
  ue as useGarden,
  E as useOrderbook,
  s as useSecretManager
};
//# sourceMappingURL=@gardenfi_react-hooks.js.map
