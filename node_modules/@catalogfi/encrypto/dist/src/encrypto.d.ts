import { DecryptionDetails, EncryptionDetails } from './encrypto.types';

export default class Encrypto {
    private static readonly algorithm;
    /**
     * Encrypts the data with a key generated from password and salt
     * @param data json stringified data or string to encrypt
     * @param password user password
     * @returns `EncryptionDetails` object containing encryptedData, key and salt
     */
    static encrypt(data: string, password: string): EncryptionDetails;
    /**
     * Encrypts the data with a key
     * Use this method, when you have the salt and key received by `encrypt` method
     * @param data json stringified data or string to encrypt
     * @param key encryption key
     * @param salt encryption salt
     * @returns
     */
    static encryptWithKey(data: string, key: string, salt: string): EncryptionDetails;
    /**
     * Decrypts the data with a key generated from password and salt
     * @param data data to decrypt
     * @param password user password
     * @param salt salt used to encrypting the data
     * @returns `DecryptionDetails` object containing decryptedData, key and salt
     */
    static decrypt(data: string, password: string, salt: string): DecryptionDetails;
    /**
     *
     * @param data data to decrypt
     * @param key encryption key
     * @param salt salt used for encrypting the data
     * @returns
     */
    static decryptWithKey(data: string, key: string, salt: string): DecryptionDetails;
    private static encryptAES;
    private static decryptAES;
    private static generateKey;
    private static generateSalt;
}
