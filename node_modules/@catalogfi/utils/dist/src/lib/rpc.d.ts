export type RpcRequest = {
    method: string;
    params: Record<string, unknown>;
    id: number;
    version: string;
};
export type RpcResponse<T> = {
    result: T | undefined;
    error: {
        code: number;
        message: string;
        data: string;
    } | null;
    id: number;
    jsonrpc: string;
};
export interface IJsonRpc {
    sendRequest<T>(request: RpcRequest): Promise<RpcResponse<T>>;
}
export declare class JsonRpc implements IJsonRpc {
    private url;
    constructor(url: string);
    /**
     * Sends a request and returns a response.
     *
     * @param {RpcRequest} request - The request to send.
     * @return {Promise<RpcResponse<T>>} - A promise that resolves to the response.
     */
    sendRequest<T>(request: RpcRequest): Promise<RpcResponse<T>>;
}
