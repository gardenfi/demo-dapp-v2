export interface IConnector {
    /**
     * Makes an RPC request to the extension the with optional parameters.
     * @param {string} method - RPC method name
     * @param {any} params - RPC method params
     *
     * @returns {Promise<unknown>}
     */
    send(method: string, params?: any): Promise<unknown>;
}
export type WalletRequest = {
    method: string;
    params?: any;
    metadata: {
        url: string;
        favicon: string;
    };
};
/**
 * Connector to communicate with catalog extension
 *
 * @implements {IConnector}
 */
export declare class Connector implements IConnector {
    private readonly extensionId;
    /**
     * Initializes a new instance of the class.
     *
     * @param {Object} catalog - An optional object with an `id` property representing the catalog ID injected by the extension.
     * @throws {Error} If the catalog wallet extension is not found.
     */
    constructor(catalog?: {
        id: string;
    });
    send(method: string, params?: any): Promise<unknown>;
}
/**
 * Checks if the catalog wallet is installed.
 *
 * @returns {boolean} True if the catalog wallet is installed, false otherwise.
 */
export declare const isCatalogWalletInstalled: () => boolean;
