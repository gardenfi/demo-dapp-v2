"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});class d{constructor(o){if(o)this.extensionId=o.id;else if(m())this.extensionId=l("chrome");else if(c())this.extensionId=l("window");else throw new Error("Catalog wallet extension not found")}send(o,a){return new Promise((s,i)=>{const n={url:"",favicon:""},u=window.location.href.split("://")[1].replace(/\/$/,"");n.url=u;let e=document.querySelector("link[rel='icon']");if(e||(e=document.querySelector("link[rel='shortcut icon']")),e||(e=document.querySelector("link[rel='apple-touch-icon']")),e||(e=document.querySelector("meta[property='og:image']")),e)n.favicon=e instanceof HTMLMetaElement?e.content:e.href;else{const r=new URL(window.location.href);n.favicon=`${r.protocol}//${r.hostname}/favicon.ico`}chrome.runtime.sendMessage(this.extensionId,{method:o,params:a,metadata:n},r=>chrome.runtime.lastError?i(chrome.runtime.lastError):typeof r=="object"&&r&&"error"in r?i(r.error):s(r))})}}const c=()=>{try{const t=window;return t&&t.catalog&&t.catalog.id}catch{return!1}},l=t=>{if(t==="chrome")return chrome.runtime.id;if(t==="window")return window.catalog.id;throw new Error("Invalid medium to get wallet id")},m=()=>{try{return chrome&&!!chrome.runtime&&!!chrome.runtime.id}catch{return!1}};exports.Connector=d;exports.isCatalogWalletInstalled=c;
