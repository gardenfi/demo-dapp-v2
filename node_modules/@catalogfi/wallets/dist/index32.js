import{Path as i}from"./index33.js";const e=class e{constructor(t,s){this.store=t,this.network=s,this.store=t,this.network=s}async getMnemonic(){return await this.store.get(e.storeKeys.mnemonic)}static getMnemonic(t){return t.get(e.storeKeys.mnemonic)}static async getAccounts(t,s=0,n){return await new e(t,n).getAccounts(s)}async getAccounts(t=0){const s=JSON.parse(await this.store.get(e.storeKeys.paths+t.toString()+this.network)||"[]");return s.length===0?new Error("No accounts found in store with account number "+t):s}async save(t,s){var a;await this.store.set(e.storeKeys.mnemonic,t);const n=new Map;for(const o of s){const r=i.getAccountNumber(o.path);n.has(r)?(a=n.get(r))==null||a.push(o):n.set(r,[o])}for(const[o,r]of n)await this.store.set(e.storeKeys.paths+o.toString()+this.network,JSON.stringify(r))}static async save(t,s,n,a){return await new e(n,a).save(t,s)}};e.storeKeys={paths:"wallet_paths",mnemonic:"mnemonic"};let c=e;export{c as WalletDetailsStore};
