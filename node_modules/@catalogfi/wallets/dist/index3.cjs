"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("bip39"),i=require("bip32"),a=require("tiny-secp256k1"),u=require("./index19.cjs");function m(e){const n=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const t in e)if(t!=="default"){const r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:()=>e[t]})}}return n.default=e,Object.freeze(n)}const s=m(a),p=()=>o.generateMnemonic();function d(e,n,t){if(!o.validateMnemonic(e))throw new Error("Invalid mnemonic");const r=t?.path??u.BitcoinPaths.bip44(n,t?.index??0),c=i.BIP32Factory(s).fromSeed(o.mnemonicToSeedSync(e));return f(c,r)}const f=(e,n)=>{const t=e.derivePath(n).privateKey;if(!t)throw new Error("Unable to derive private key from mnemonic");return t.toString("hex")};exports.generateMnemonic=p;exports.mnemonicToPrivateKey=d;
