import{validateField as N,nLength as S}from"./index68.js";import{validateObject as O}from"./index95.js";/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const A=BigInt(0),u=BigInt(1);function z(r,h){const l=(e,t)=>{const n=t.negate();return e?n:t},g=e=>{const t=Math.ceil(h/e)+1,n=2**(e-1);return{windows:t,windowSize:n}};return{constTimeNegate:l,unsafeLadder(e,t){let n=r.ZERO,d=e;for(;t>A;)t&u&&(n=n.add(d)),d=d.double(),t>>=u;return n},precomputeWindow(e,t){const{windows:n,windowSize:d}=g(t),s=[];let o=e,i=o;for(let c=0;c<n;c++){i=o,s.push(i);for(let w=1;w<d;w++)i=i.add(o),s.push(i);o=i.double()}return s},wNAF(e,t,n){const{windows:d,windowSize:s}=g(e);let o=r.ZERO,i=r.BASE;const c=BigInt(2**e-1),w=2**e,B=BigInt(e);for(let f=0;f<d;f++){const p=f*s;let a=Number(n&c);n>>=B,a>s&&(a-=w,n+=u);const b=p,m=p+Math.abs(a)-1,I=f%2!==0,F=a<0;a===0?i=i.add(l(I,t[b])):o=o.add(l(F,t[m]))}return{p:o,f:i}},wNAFCached(e,t,n,d){const s=e._WINDOW_SIZE||1;let o=t.get(e);return o||(o=this.precomputeWindow(e,s),s!==1&&t.set(e,d(o))),this.wNAF(s,o,n)}}}function E(r){return N(r.Fp),O(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...S(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}export{E as validateBasic,z as wNAF};
