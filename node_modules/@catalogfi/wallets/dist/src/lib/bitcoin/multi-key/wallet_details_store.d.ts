import { IWalletStore } from './store';
import { AccountStore } from './interface';
import { BitcoinNetwork } from '../provider.interface';

/**
 * Helper class around the store to save the wallet details.
 */
export declare class WalletDetailsStore {
    private store;
    private network;
    static storeKeys: {
        paths: string;
        mnemonic: string;
    };
    /**
     * @param store The store to save the wallet details to
     * @param network The network of the wallet which is used as separator between different networks.
     */
    constructor(store: IWalletStore, network: BitcoinNetwork);
    getMnemonic(): Promise<string | null>;
    static getMnemonic(store: IWalletStore): Promise<string | null>;
    /**
     * Gets the accounts from the store with
     */
    static getAccounts(store: IWalletStore, accountNumber: number | undefined, network: BitcoinNetwork): Promise<Error | AccountStore[]>;
    /**
     * Gets the accounts from the store with
     */
    getAccounts(accountNumber?: number): Promise<Error | AccountStore[]>;
    /**
     * Saves the mnemonic and the accounts to the store.
     */
    save(mnemonic: string, accounts: AccountStore[]): Promise<void>;
    static save(mnemonic: string, accounts: AccountStore[], store: IWalletStore, network: BitcoinNetwork): Promise<void>;
}
