import{secp256k1 as o}from"./index44.js";import{toHex as p}from"./index42.js";import{toAccount as m}from"./index45.js";import{publicKeyToAddress as c}from"./index46.js";import{sign as g}from"./index47.js";import{experimental_signAuthorization as y}from"./index48.js";import{signMessage as u}from"./index49.js";import{signTransaction as f}from"./index50.js";import{signTypedData as K}from"./index51.js";function l(r,s={}){const{nonceManager:i}=s,a=p(o.getPublicKey(r.slice(2),!1)),t=c(a);return{...m({address:t,nonceManager:i,async sign({hash:e}){return g({hash:e,privateKey:r,to:"hex"})},async experimental_signAuthorization(e){return y({...e,privateKey:r})},async signMessage({message:e}){return u({message:e,privateKey:r})},async signTransaction(e,{serializer:n}={}){return f({privateKey:r,transaction:e,serializer:n})},async signTypedData(e){return K({...e,privateKey:r})}}),publicKey:a,source:"privateKey"}}export{l as privateKeyToAccount};
