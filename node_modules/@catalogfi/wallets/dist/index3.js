import{generateMnemonic as i,validateMnemonic as a,mnemonicToSeedSync as m}from"bip39";import{BIP32Factory as c}from"bip32";import*as s from"tiny-secp256k1";import{BitcoinPaths as f}from"./index19.js";const p=()=>i();function d(r,n,o){if(!a(r))throw new Error("Invalid mnemonic");const t=(o==null?void 0:o.path)??f.bip44(n,(o==null?void 0:o.index)??0),e=c(s).fromSeed(m(r));return v(e,t)}const v=(r,n)=>{const o=r.derivePath(n).privateKey;if(!o)throw new Error("Unable to derive private key from mnemonic");return o.toString("hex")};export{p as generateMnemonic,d as mnemonicToPrivateKey};
