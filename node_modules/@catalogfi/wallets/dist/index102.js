import{maxBytesPerTransaction as p,bytesPerBlob as f,fieldElementsPerBlob as b,bytesPerFieldElement as l}from"./index115.js";import{EmptyBlobError as B,BlobSizeTooLargeError as h}from"./index104.js";import{createCursor as c}from"./index99.js";import{size as u}from"./index74.js";import{hexToBytes as d}from"./index56.js";import{bytesToHex as x}from"./index42.js";function w(e){const y=e.to??(typeof e.data=="string"?"hex":"bytes"),a=typeof e.data=="string"?d(e.data):e.data,o=u(a);if(!o)throw new B;if(o>p)throw new h({maxSize:p,size:o});const r=[];let i=!0,s=0;for(;i;){const t=c(new Uint8Array(f));let m=0;for(;m<b;){const n=a.slice(s,s+(l-1));if(t.pushByte(0),t.pushBytes(n),n.length<31){t.pushByte(128),i=!1;break}m++,s+=31}r.push(t)}return y==="bytes"?r.map(t=>t.bytes):r.map(t=>x(t.bytes))}export{w as toBlobs};
