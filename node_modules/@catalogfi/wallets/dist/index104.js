import{versionedHashVersionKzg as a}from"./index103.js";import{BaseError as r}from"./index72.js";class i extends r{constructor({maxSize:e,size:s}){super("Blob size is too large.",{metaMessages:[`Max: ${e} bytes`,`Given: ${s} bytes`],name:"BlobSizeTooLargeError"})}}class n extends r{constructor(){super("Blob data must not be empty.",{name:"EmptyBlobError"})}}class t extends r{constructor({hash:e,size:s}){super(`Versioned hash "${e}" size is invalid.`,{metaMessages:["Expected: 32",`Received: ${s}`],name:"InvalidVersionedHashSizeError"})}}class d extends r{constructor({hash:e,version:s}){super(`Versioned hash "${e}" version is invalid.`,{metaMessages:[`Expected: ${a}`,`Received: ${s}`],name:"InvalidVersionedHashVersionError"})}}export{i as BlobSizeTooLargeError,n as EmptyBlobError,t as InvalidVersionedHashSizeError,d as InvalidVersionedHashVersionError};
